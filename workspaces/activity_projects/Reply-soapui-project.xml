<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="51f4c0d3-504f-4a71-9b6c-1a339177e94c" activeEnvironment="Default" name="Reply" resourceRoot="${projectDir}" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="5381d292-4f4a-4180-9291-2a21e2745656" wadlVersion="http://wadl.dev.java.net/2009/02" name="Json Flat All" type="rest" basePath="/" definitionUrl="http://${mwHubAddress}:${mwHubPort}/mediate/qa/run/activity/Reply/json_flat_all?WADL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>http://192.168.0.130:57720</con:endpoint></con:endpoints><con:resource name="mediate/qa/run/activity/Reply/json_flat_all/request" path="mediate/qa/run/activity/Reply/json_flat_all/message" id="7b36b0a1-3fb3-4b77-bc8f-8341aebb46e7"><con:settings/><con:parameters/><con:method name="POST" id="97206ef7-904b-40ac-af25-87306fd68099" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:request</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:response</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Optional": "Optional",
	"Mandatory": "Mandatory"
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="b6b6466e-8e0e-4ba0-a394-31da86d51ce6" wsaVersion="NONE" name="SoapMockService" type="wsdl" bindingName="{urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl}Rec_RepSOAP12Binding" soapVersion="1_2" anonymous="optional" definition="http://${mwHubAddress}:${mwHubPort}/mediate/qa/run/mockService/Rec_Rep?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep?WSDL"><con:part><con:url>http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep?WSDL</con:url><con:content><![CDATA[<definitions targetNamespace="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:mw="http://www.mobicware.com" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap11="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl" xmlns:wsa="http://www.w3.org/2005/08/addressing">
  <types>
    <s:schema targetNamespace="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl">
      <s:element mw:isEncrypt="no" name="message" type="s:string" xmlns:mw="http://www/mobicware.com"/>
    </s:schema>
  </types>
  <message name="mock ReceiveInputMessage">
    <part element="tns:message" name="mock ReceiveInput"/>
  </message>
  <message name="mock ReceiveOutputMessage">
    <part element="tns:message" name="mock ReceiveOutput"/>
  </message>
  <portType name="Rec_RepPortType">
    <operation name="mock Receive">
      <input message="tns:mock ReceiveInputMessage" name="mock ReceiveInput"/>
      <output message="tns:mock ReceiveOutputMessage" name="mock ReceiveOutput"/>
    </operation>
  </portType>
  <binding name="Rec_RepSOAP12Binding" type="tns:Rec_RepPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="mock Receive">
      <soap12:operation soapAction="/mediate/qa/run/mockService/Rec_Rep" style="document"/>
      <input name="mock ReceiveInput">
        <soap12:body use="literal"/>
      </input>
      <output name="mock ReceiveOutput">
        <soap12:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="Rec_RepSOAP11Binding" type="tns:Rec_RepPortType">
    <soap11:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="mock Receive">
      <soap11:operation soapAction="/mediate/qa/run/mockService/Rec_Rep" style="document"/>
      <input name="mock ReceiveInput">
        <soap11:body use="literal"/>
      </input>
      <output name="mock ReceiveOutput">
        <soap11:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="Rec_RepHTTPGETBinding" type="tns:Rec_RepPortType">
    <http:binding verb="GET"/>
    <operation name="mock Receive">
      <http:operation location="/message"/>
      <input name="mock ReceiveInput">
        <http:urlEncoded/>
      </input>
      <output name="mock ReceiveOutput">
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
  </binding>
  <binding name="Rec_RepHTTPPOSTXMLBinding" type="tns:Rec_RepPortType">
    <http:binding verb="POST"/>
    <operation name="mock Receive">
      <http:operation location="/message"/>
      <input name="mock ReceiveInput">
        <mime:content part="mock ReceiveInput" type="application/xml"/>
      </input>
      <output name="mock ReceiveOutput">
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
  </binding>
  <binding name="Rec_RepHTTPPOSTFORMBinding" type="tns:Rec_RepPortType">
    <http:binding verb="POST"/>
    <operation name="mock Receive">
      <http:operation location="/message"/>
      <input name="mock ReceiveInput">
        <mime:content part="mock ReceiveInput" type="application/x-www-form-urlencoded"/>
      </input>
      <output name="mock ReceiveOutput">
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
  </binding>
  <binding name="Rec_RepHTTPPOSTJSONBinding" type="tns:Rec_RepPortType">
    <http:binding verb="POST"/>
    <operation name="mock Receive">
      <http:operation location="/message"/>
      <input name="mock ReceiveInput">
        <mime:content part="mock ReceiveInput" type="application/json"/>
      </input>
      <output name="mock ReceiveOutput">
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
  </binding>
  <service name="Rec_RepService">
    <port binding="tns:Rec_RepSOAP12Binding" name="Rec_RepSOAP12BindingPort">
      <soap12:address location="http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep"/>
    </port>
    <port binding="tns:Rec_RepSOAP11Binding" name="Rec_RepSOAP11BindingPort">
      <soap11:address location="http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep"/>
    </port>
    <port binding="tns:Rec_RepHTTPGETBinding" name="Rec_RepHTTPGETBindingPort">
      <http:address location="http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep"/>
    </port>
    <port binding="tns:Rec_RepHTTPPOSTXMLBinding" name="Rec_RepHTTPPOSTXMLBindingPort">
      <http:address location="http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep"/>
    </port>
    <port binding="tns:Rec_RepHTTPPOSTFORMBinding" name="Rec_RepHTTPPOSTFORMBindingPort">
      <http:address location="http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep"/>
    </port>
    <port binding="tns:Rec_RepHTTPPOSTJSONBinding" name="Rec_RepHTTPPOSTJSONBindingPort">
      <http:address location="http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep</con:endpoint></con:endpoints><con:operation id="f9dbe3b9-0aac-4357-8a92-7d9421469bfa" isOneWay="false" action="/mediate/qa/run/mockService/Rec_Rep" name="mock Receive" bindingOperationName="mock Receive" type="Request-Response" outputName="mock ReceiveOutput" inputName="mock ReceiveInput" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="206c221c-3b23-4e4f-9ba2-7e4d98ed3865" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://192.168.0.54:57720/mediate/qa/run/mockService/Rec_Rep</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:rec="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl">\r
   <soap:Header/>\r
   <soap:Body>\r
      <rec:message>sample</rec:message>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveInput"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="1f80c7d5-18e8-4863-8ac5-9a0177fc6657" wadlVersion="http://wadl.dev.java.net/2009/02" name="Json Item All" type="rest" basePath="/" definitionUrl="http://${mwHubAddress}:${mwHubPort}/mediate/qa/run/activity/Reply/json_item_all?WADL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>http://192.168.0.130:57720</con:endpoint></con:endpoints><con:resource name="mediate/qa/run/activity/Reply/json_item_all/message" path="mediate/qa/run/activity/Reply/json_item_all/message" id="266274ff-8492-406d-99ce-41a4bdafcaef"><con:settings/><con:parameters/><con:method name="POST" id="70695fd9-0501-41c3-ac4e-e98c2cac0caa" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:message</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:message</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined2":"Undefined2",
		"Undefined3":"Undefined3",
		"Undefined4":"Undefined4"
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="667a0e69-16be-4ac6-9449-f5ef6c173462" wadlVersion="http://wadl.dev.java.net/2009/02" name="Json Flat Sequence" type="rest" basePath="/" definitionUrl="http://${mwHubAddress}:${mwHubPort}/mediate/qa/run/activity/Reply/json_flat_sequence?WADL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>http://192.168.0.130:57720</con:endpoint></con:endpoints><con:resource name="mediate/qa/run/activity/Reply/json_flat_sequence/message" path="mediate/qa/run/activity/Reply/json_flat_sequence/message" id="a28941d4-0022-4b4e-83a6-a2005e80ad15"><con:settings/><con:parameters/><con:method name="POST" id="b5c85e62-4675-416a-87a6-a0ecf9df0cce" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:message</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:message</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="a31cb8fb-bd79-42cc-abc0-54ce5baa0a53" wadlVersion="http://wadl.dev.java.net/2009/02" name="Json Item Sequence" type="rest" basePath="/" definitionUrl="http://${mwHubAddress}:${mwHubPort}/mediate/qa/run/activity/Reply/json_item_sequence?WADL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>http://192.168.0.130:57720</con:endpoint></con:endpoints><con:resource name="mediate/qa/run/activity/Reply/json_item_sequence/message" path="mediate/qa/run/activity/Reply/json_item_sequence/message" id="7a298aab-c237-49e3-a98a-e88192a0232c"><con:settings/><con:parameters/><con:method name="POST" id="c6d1a294-515d-44da-8da1-edf2d7fd9488" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:message</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:message</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined2":"Undefined2",
		"Undefined3":"Undefined3",
		"Undefined4":"Undefined4"
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="607314d4-316b-4ae4-9f01-5a892d981c71" name="Reply Json All Type TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="51196bc4-6a99-4562-9f96-f278027b355e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat All_element notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="ebaa8450-5eba-4fbf-9230-8b5e56c8bee4"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="377baae2-adda-4559-8488-6ab295682266"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="53ae68ea-0865-4242-8227-612be790e808" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat All_element Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="dc0e79d6-bb64-4fee-8085-fd73d753d715"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":null,
	"Optional":null,
	"Multiple":null,
	"Number":null
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":null,"Multiple":[],"Number":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="79d6d734-2387-4c28-b266-5cc93397a2f4"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*>(<Mandatory></Mandatory>|<Mandatory/>)(<Optional></Optional>|<Optional/>)(<Multiple></Multiple>|<Multiple/>)(<Number></Number>|<Number/>)</.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b47a69fc-c393-44c2-9f32-7bd1d64da0f4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Mandatory_element Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="68442219-b0da-4038-b8ff-c0411dafe839"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":null,
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":null
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":null,"Optional":"Optional","Multiple":["Multiple"],"Number":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="92da5586-d9fd-49a3-986c-9b48b16e876e"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*>(<Mandatory></Mandatory>|<Mandatory/>)<Optional>Optional</Optional><Multiple>Multiple</Multiple>(<Number></Number>|<Number/>)</.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d8e7609b-6dc0-4528-a2bd-e719525c39ec" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Mandatory_element Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="456e8a4c-992a-4966-a573-026351523e11"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"  ",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":"  "
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"  ","Optional":"Optional","Multiple":["Multiple"],"Number":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="30fb9b19-2cb7-450f-8f0a-d2ded3382d65"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>  </Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>  </Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="424c48fd-fe49-4dd5-8694-463e487b4140" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Mandatory_element notSend TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="8ce92ca3-a0a0-47d9-aed7-6c9ad5591d2c"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Optional":"Optional",
	"Multiple":"Multiple"
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":null,"Optional":"Optional","Multiple":["Multiple"],"Number":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="effc7e29-a1d4-412e-aa97-a21b9fb9f49f"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*>(<Mandatory></Mandatory>|<Mandatory/>)<Optional>Optional</Optional><Multiple>Multiple</Multiple>(<Number></Number>|<Number/>)</.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Request" id="564a27ff-32f6-4dff-911d-068b1dbe0ffc"/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f7f9d8b4-e27f-4df1-b807-2879a96dfa5e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Optional_element Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="1208e4f0-0e58-4c64-a915-cd01d8d1bbaf"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":null,
	"Multiple":null,
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Multiple":[],"Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="99f17a05-442c-44cc-839b-56e3f0f0ba3e"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory>(<Optional></Optional>|<Optional/>)(<Multiple></Multiple>|<Multiple/>)<Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4e82c82c-fefc-4c00-a560-6213c56ecd31" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Optional_element Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="470ba78b-3d6d-49a9-9cde-a8e63ee550c5"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"   ",
	"Multiple":"   ",
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"   ","Multiple":["   "],"Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="29530312-3689-4c69-99ab-5dc0c194f33d"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>   </Optional><Multiple>   </Multiple><Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5d7fc684-5f14-4320-8765-189e02a79517" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Optional_element notSend TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="e002170d-1f6d-47c2-b8c5-eff813cea146"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="ae6d09e8-43b8-422b-ac3f-226d2979d74f"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b1c32d48-e6af-447f-8cac-b53f786ec27c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Undefined_element notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="436ee240-f83c-4690-81b0-b47473c7efe7"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"Undefined":"Undefined"
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"Undefined":"Undefined"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="eb213422-7e44-471e-94c4-ef2c55c8eb76"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><Undefined>Undefined</Undefined></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="657bf5ba-daca-4a69-beb5-c920fc7c5fef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Undefined_element Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="0a305768-ff3e-4344-b711-d7a6a547e1e0"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"Undefined":null
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"Undefined":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="336af129-b97e-4180-a7da-7710ba3a2762"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number>(<Undefined></Undefined>|<Undefined/>)</.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c66c9110-ebd7-4b67-bcba-38b2c1c643aa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Undefined_element Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="b005fb5d-cbf0-4984-8387-2405cc4a698b"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"Undefined":"   "
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"Undefined":"   "}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="27adf75e-93f5-4d4e-8cd3-b90200dec47e"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><Undefined>   </Undefined></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="971c92a2-ac59-4740-ae3e-1b01afcf82ce" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Undefined_item notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="edf822e9-fd92-4f58-99a1-989f0ed4e3a0"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"Undefined_item": [{
		"element1":"element1",
		"element2":"element2",
		"element3":"element3",
		"element4":"element4"
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"Undefined_item":{"element1":"element1","element2":"element2","element3":"element3","element4":"element4"}}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="1898207c-1c5a-46bc-aacf-82783ce56d16"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><Undefined_item><element1>element1</element1><element2>element2</element2><element3>element3</element3><element4>element4</element4></Undefined_item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ef02de47-6235-4f6b-8fb1-ee0ef97529e0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat All_element SpecialCharacter TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="a324797b-4fbf-4558-8cde-f9e3f016350b"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"\"\\\/",
	"Optional":"\"\\\/",
	"Multiple":"Multiple",
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"\"\\/","Optional":"\"\\/","Multiple":["Multiple"],"Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="f93678b0-2981-4b99-843d-e42394163dba"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>\"\\\/</Mandatory><Optional>\"\\\/</Optional><Multiple>Multiple</Multiple><Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5f9b7252-2452-4c7a-8481-086825700d85" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat All_element Complex TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="19bd84bc-5582-4af8-858c-a2e41b9fcef4"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Undefined1":"Undefined1",
	"Mandatory":"Mandatory",
	"Optional":"   ",
	"Undefined2":"   ",
	"Multiple":"Multiple",
	"Number":null,
	"Undefined3":"Undefined3"
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Undefined1":"Undefined1","Mandatory":"Mandatory","Optional":"   ","Undefined2":"   ","Multiple":["Multiple"],"Number":null,"Undefined3":"Undefined3"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="d1d585bd-daae-4570-8c4e-3a91f150a41e"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Undefined1>Undefined1</Undefined1><Mandatory>Mandatory</Mandatory><Optional>   </Optional><Undefined2>   </Undefined2><Multiple>Multiple</Multiple>(<Number></Number>|<Number/>)<Undefined3>Undefined3</Undefined3></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="11e26961-e745-4024-bc7a-c919dc1f2749" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem All_element notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="b39a45f2-805c-4646-ab62-b6924807a29f"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107"
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107"}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="18dbcd1b-bea9-4bb7-a6a7-ca82859f7217"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f39e83ab-b212-492f-b8dd-171f7225b27d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_elements notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="8143fc3c-140b-44aa-abba-eacd466e236f"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined2":"Undefined2",
		"Undefined3":"Undefined3",
		"Undefined4":"Undefined4"
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined2":"Undefined2","Undefined3":"Undefined3","Undefined4":"Undefined4"}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="515c88ba-d433-49cf-90e7-6f5a841b23f7"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined2>Undefined2</Undefined2><Undefined3>Undefined3</Undefined3><Undefined4>Undefined4</Undefined4></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="52cc5158-9ab2-4786-bd19-3d2548c4fbb6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_elements Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="01142d39-7003-4a57-8a79-a684219aa71a"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":null,
		"Undefined2":null,
		"Undefined3":null,
		"Undefined4":null
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":null,"Undefined2":null,"Undefined3":null,"Undefined4":null}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="6fcfacfd-7676-40f9-ab49-e25187e4726d"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId>(<Undefined1></Undefined1>|<Undefined1/>)(<Undefined2></Undefined2>|<Undefined2/>)(<Undefined3></Undefined3>|<Undefined3/>)(<Undefined4></Undefined4>|<Undefined4/>)</item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6cfff698-1a27-4501-8213-951a86958eee" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_elements Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="569f2ca9-ccaa-45b8-b536-bfaa61bc5efb"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"   ",
		"Undefined2":"   ",
		"Undefined3":"   ",
		"Undefined4":"   "
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"   ","Undefined2":"   ","Undefined3":"   ","Undefined4":"   "}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="a0b83b8b-4d3e-45aa-bad2-d4c75f438ede"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>   </Undefined1><Undefined2>   </Undefined2><Undefined3>   </Undefined3><Undefined4>   </Undefined4></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5c67cc52-4748-408f-b941-3b7210866b04" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_elements Complex TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="f838fed4-8c17-4734-9802-dab1643a1d69"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"   ",
		"Undefined2":"Undefined2",
		"Undefined3":null,
		"Undefined4":"Undefined4",
		"Undefined5":null
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"   ","Undefined2":"Undefined2","Undefined3":null,"Undefined4":"Undefined4","Undefined5":null}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="0ec4799a-1e18-42ac-9990-dd89ad6ef5b2"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>   </Undefined1><Undefined2>Undefined2</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined4</Undefined4>(<Undefined5></Undefined5>|<Undefined5/>)</item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7139ea1d-82da-4b15-9a36-263725745f22" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="8f4b1c71-8ef8-41ea-9008-875962808008"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":"Undefined1",
			"Undefined2":"Undefined2",
			"Undefined3":"Undefined3",
			"Undefined4":"Undefined4"
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":{"Undefined1":"Undefined1","Undefined2":"Undefined2","Undefined3":"Undefined3","Undefined4":"Undefined4"}}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="b51b8a70-d8d3-4d5f-8353-7aaf1dc6d411"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item><Undefined1>Undefined1</Undefined1><Undefined2>Undefined2</Undefined2><Undefined3>Undefined3</Undefined3><Undefined4>Undefined4</Undefined4></Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b8b0b73d-cff3-4c75-816e-7360b4952679" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="19d2bb04-e81f-47c7-a8d8-06314a14d4fa"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":null,
			"Undefined2":null,
			"Undefined3":null,
			"Undefined4":null
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":{"Undefined1":null,"Undefined2":null,"Undefined3":null,"Undefined4":null}}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="efab6d8c-3468-40d7-9aea-f8e574a4172a"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item>(<Undefined1></Undefined1>|<Undefined1/>)(<Undefined2></Undefined2>|<Undefined2/>)(<Undefined3></Undefined3>|<Undefined3/>)(<Undefined4></Undefined4>|<Undefined4/>)</Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bda6caa2-e95b-4934-8de3-b79e1bd38fdd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="8d730dfa-71ff-49be-8cdd-a2d3c4974ce5"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":"  ",
			"Undefined2":"  ",
			"Undefined3":"  ",
			"Undefined4":"  "
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":{"Undefined1":"  ","Undefined2":"  ","Undefined3":"  ","Undefined4":"  "}}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="9a0185a1-e658-42c5-9a5f-6bc1d07529b3"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item><Undefined1>  </Undefined1><Undefined2>  </Undefined2><Undefined3>  </Undefined3><Undefined4>  </Undefined4></Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3ff97982-a2f8-42b5-a54c-0bcce4bde105" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item Complex TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="f6622b2f-d06d-40a1-b5c7-cfc01b4e661f"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":"  ",
			"Undefined2":"Undefined2",
			"Undefined3":null,
			"Undefined4":"Undefined4",
			"Undefined5":null
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":{"Undefined1":"  ","Undefined2":"Undefined2","Undefined3":null,"Undefined4":"Undefined4","Undefined5":null}}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="fac9b351-6a9c-433f-b531-aca6373d03cb"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item><Undefined1>  </Undefined1><Undefined2>Undefined2</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined4</Undefined4>(<Undefined5></Undefined5>|<Undefined5/>)</Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4611a1e4-86fc-40b9-b597-259faad5e4ce" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item Loop TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item All Request" id="5a7cc6db-612f-4f1b-a59b-a7a165561e1b"><con:settings/><con:config service="Json Item All" resourcePath="/mediate/qa/run/activity/Reply/json_item_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item All Request" id="bbfa54c4-ee75-4ba0-a17e-50229042d299" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":"Undefined1",
			"Undefined2":"Undefined2",
			"Undefined3":null,
			"Undefined4":"Undefined4"
		},{
			"Undefined1":"Undefined11",
			"Undefined2":"Undefined21",
			"Undefined3":null,
			"Undefined4":"Undefined41"
		},{
			"Undefined1":"Undefined12",
			"Undefined2":"Undefined22",
			"Undefined3":null,
			"Undefined4":"Undefined42"
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_all/message</con:originalUri><con:assertion type="JsonPath Match" id="5688a258-93c0-4756-b007-6effb2e8276d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":[{"Undefined1":"Undefined1","Undefined2":"Undefined2","Undefined3":null,"Undefined4":"Undefined4"},{"Undefined1":"Undefined11","Undefined2":"Undefined21","Undefined3":null,"Undefined4":"Undefined41"},{"Undefined1":"Undefined12","Undefined2":"Undefined22","Undefined3":null,"Undefined4":"Undefined42"}]}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="1bcc9423-f63d-4270-b8a1-e97677ace1e0"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item All Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item><Undefined1>Undefined1</Undefined1><Undefined2>Undefined2</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined4</Undefined4></Undefined_item><Undefined_item><Undefined1>Undefined11</Undefined1><Undefined2>Undefined21</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined41</Undefined4></Undefined_item><Undefined_item><Undefined1>Undefined12</Undefined1><Undefined2>Undefined22</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined42</Undefined4></Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="4e891e89-e40d-4ef9-b672-141f50ec88ae" name="Reply Json Sequence Type TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a1b6ff16-6b95-4f88-be67-97c97f4c66d6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat All_element notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="558fb813-2939-4049-a18f-c2f3f7412150"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="95d76304-298b-49a4-bf8e-4b198c641ff3" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="ec0fcb98-2c66-4b8b-9b26-1e1a682d2ec5"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="82f9784c-b3cd-4983-abee-66e5b64aac43" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat All_element Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="ea2d9a32-acb1-495f-9ff0-3244dac12b0b"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":null,
	"Optional":null,
	"Multiple":null,
	"Number":null
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="e6a8b854-7912-4dd3-b677-0fa8dc809fa4" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":null,"Multiple":[],"Number":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="640f9398-5b70-4bca-949f-db1652112f06"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*>(<Mandatory></Mandatory>|<Mandatory/>)(<Optional></Optional>|<Optional/>)(<Multiple></Multiple>|<Multiple/>)(<Number></Number>|<Number/>)</.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8aa422a4-0998-4289-8f41-b889d59f8677" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Mandatory_element Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="8ec3822a-868b-475b-be64-a16f7b9ddf4a"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":null,
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":null
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="a984d68a-daa8-485c-9e1e-39ce6de0a39d" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":null,"Optional":"Optional","Multiple":["Multiple"],"Number":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="73d53144-89cd-4ca8-950f-9c1c519ab9b3"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*>(<Mandatory></Mandatory>|<Mandatory/>)<Optional>Optional</Optional><Multiple>Multiple</Multiple>(<Number></Number>|<Number/>)</.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="62f4a357-8d56-49b8-8831-ab314ca7ca68" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Mandatory_element Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="c70804d1-50a6-4833-b3a0-69273bb2446f"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"  ",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":"  "
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="38eb1578-6d9c-4f91-96a7-3781e634aec3" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"  ","Optional":"Optional","Multiple":["Multiple"],"Number":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="6485c18c-2559-42e8-b376-a15f6de66e15"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>  </Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>  </Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a0c0512a-7663-4b05-9267-8f6bc77db048" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Mandatory_element notSend TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="b52a30b5-ca8d-4e32-a0f5-d03507125629"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Optional":"Optional",
	"Multiple":"Multiple"
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="8ad1452d-15b0-4425-b281-c7b6c54ed82f" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":null,"Optional":"Optional","Multiple":["Multiple"],"Number":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="3774bc4a-a1fc-485c-94b8-d95b7f7d066e"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*>(<Mandatory></Mandatory>|<Mandatory/>)<Optional>Optional</Optional><Multiple>Multiple</Multiple>(<Number></Number>|<Number/>)</.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Request" id="564a27ff-32f6-4dff-911d-068b1dbe0ffc"/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3905cb6d-2a8e-4541-939d-5d5990e91630" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Optional_element Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="0034065b-4c11-4163-b7c3-6d61e5b3a622"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":null,
	"Multiple":null,
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="4609562e-fe11-4a96-92eb-86bf3ddaa632" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Multiple":[],"Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="f030a593-164a-4c12-8e37-01dd41226d70"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory>(<Optional></Optional>|<Optional/>)(<Multiple></Multiple>|<Multiple/>)<Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5cd32582-0cd0-4380-8c8f-933c2deafd10" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Optional_element Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="e422de7b-af8c-4d11-b53e-3fbe94bb36cb"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"   ",
	"Multiple":"   ",
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="f89f426e-a206-4407-81b8-ff941f6fd2a3" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"   ","Multiple":["   "],"Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="daf9fe3d-6e9b-445a-b669-c32a56e78a89"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>   </Optional><Multiple>   </Multiple><Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="19cda74d-efc4-41ae-affb-24ab666689df" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Optional_element notSend TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="a5a9fae6-f518-4c0c-a1ac-bcd1edc66052"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="c992ab34-ef41-4278-b4db-eb5660822072" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="12858f68-b4e6-41bd-8f19-cd9a40abdb58"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="fd2be523-c0df-4cba-9389-2aae445124d3"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f4b306d4-3053-43db-ace1-8bf8ab9565a1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Undefined_element notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="9bdf5bb3-3322-43ab-b600-7b96b4bf61ec"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"Undefined":"Undefined"
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="2f9cd798-4b38-469e-a18f-12515471b1eb" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"Undefined":"Undefined"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="b1c085fc-2b21-4807-8adf-606ae0ae4c2a"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><Undefined>Undefined</Undefined></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6b163301-1e10-4c00-ac06-3cd526b28cd6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Undefined_element Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="a46170dc-7636-4e88-9ab2-1953da6ef54a"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"Undefined":null
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="fc2d465e-76b3-4241-8149-84dccba793a0" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"Undefined":null}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="2d496fbc-64d0-4974-84a3-cd493f176cdf"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number>(<Undefined></Undefined>|<Undefined/>)</.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="edba0879-f307-46ab-bb29-2397638b4bf8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Undefined_element Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="8dd29c6b-0abf-4ad5-ace4-ba6dfa99da47"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"Undefined":"   "
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="b88a9ee6-6d45-4ff4-82af-c805b5ad3bde" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"Undefined":"   "}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="35c1a748-881c-466d-8e52-7b49df973ae9"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><Undefined>   </Undefined></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4e94030d-36ac-4399-b274-cd823fb5f3cc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat Undefined_item notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="daea7911-a735-435a-ab10-9f21a468f19b"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"Undefined_item": [{
		"element1":"element1",
		"element2":"element2",
		"element3":"element3",
		"element4":"element4"
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="28d3f37c-8265-4e9c-9a4b-a999f6f8df4c" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"Undefined_item":{"element1":"element1","element2":"element2","element3":"element3","element4":"element4"}}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="43931816-671f-412c-ab13-7dd463393d79"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><Undefined_item><element1>element1</element1><element2>element2</element2><element3>element3</element3><element4>element4</element4></Undefined_item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c20bff1f-9e0e-439e-ab81-96574d31f996" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat All_element SpecialCharacter TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="7ef78c43-ce64-4ce0-ba47-0ba19277d44d"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"\"\\\/",
	"Optional":"\"\\\/",
	"Multiple":"Multiple",
	"Number":3.14
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="8387d13a-dd04-4df4-82b6-fc3b0f40d787" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"\"\\/","Optional":"\"\\/","Multiple":["Multiple"],"Number":3.14}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="68fff9e5-8a2a-44af-bdc8-3282f68e0025"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>\"\\\/</Mandatory><Optional>\"\\\/</Optional><Multiple>Multiple</Multiple><Number>3.14</Number></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="30f7fe22-a3f8-464a-b06f-01095719253e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonFlat All_element Complex TestCase" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Flat All Request" id="5e224af6-7eaa-4453-8dee-fa968790e767" disabled="true"><con:settings/><con:config service="Json Flat All" resourcePath="/mediate/qa/run/activity/Reply/json_flat_all/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat All Request" id="23482b58-c6a7-475e-8ac1-b999af086b68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Undefined1":"Undefined1",
	"Mandatory":"Mandatory",
	"Optional":"   ",
	"Undefined2":"   ",
	"Multiple":"Multiple",
	"Number":null,
	"Undefined3":"Undefined3"
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_all/request</con:originalUri><con:assertion type="JsonPath Match" id="b5fce585-b219-484f-984d-b9003be7fdc5" name="JsonPath Match"><con:configuration><path>$</path><content>{"Undefined1":"Undefined1","Mandatory":"Mandatory","Undefined2":null,"Multiple":"Multiple","Number":null,"Undefined3":"Undefined3"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Json Flat Sequence Request" id="07f866b7-34a0-4b56-b62a-14f02be78073"><con:settings/><con:config service="Json Flat Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_flat_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Flat Sequence Request" id="189e64e0-2943-481e-865c-33b2adcc85ee" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Undefined1":"Undefined1",
	"Mandatory":"Mandatory",
	"Optional":"   ",
	"Undefined2":"   ",
	"Multiple":"Multiple",
	"Number":null,
	"Undefined3":"Undefined3"
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_flat_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="6c8c793d-2ca4-400c-97be-3a134fb4dd24" name="JsonPath Match"><con:configuration><path>$</path><content>{"Undefined1":"Undefined1","Mandatory":"Mandatory","Undefined2":null,"Multiple":"Multiple","Number":null,"Undefined3":"Undefined3"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="5df70321-e040-4f2b-a2fd-5ff9261371a9"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Flat Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Undefined1>Undefined1</Undefined1><Mandatory>Mandatory</Mandatory>(<Optional></Optional>|<Optional/>)(<Undefined2></Undefined2>|<Undefined2/>)<Multiple>Multiple</Multiple>(<Number></Number>|<Number/>)<Undefined3>Undefined3</Undefined3></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8b6d73f3-7383-4a56-a2be-f3bc5a137a8f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem All_element notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="11b10b2c-c231-4003-b80f-40d7594bcdb8"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107"
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="7b7e41a2-dfcc-450c-84eb-e4123915c771" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107"}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="9096a651-9eac-49c3-88f2-06d1bb7c6e64"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e90e6364-16f9-4fa5-a8dd-1c79ce16cdae" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_elements notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="442f0b62-03d1-4126-88fd-c18432514258"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined2":"Undefined2",
		"Undefined3":"Undefined3",
		"Undefined4":"Undefined4"
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="7a5b6a92-c970-435f-b3df-765642348d85" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined2":"Undefined2","Undefined3":"Undefined3","Undefined4":"Undefined4"}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="5dd0dfd6-93e3-4d58-8834-01c28f85d7a9"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined2>Undefined2</Undefined2><Undefined3>Undefined3</Undefined3><Undefined4>Undefined4</Undefined4></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2240a6d4-689f-42c9-a35e-e85cd05bfcc9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_elements Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="0f9740b7-181c-4804-a346-4ebae3103e6d"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":null,
		"Undefined2":null,
		"Undefined3":null,
		"Undefined4":null
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="d6c97028-729a-4a5e-a6e5-e1525f11cbb8" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":null,"Undefined2":null,"Undefined3":null,"Undefined4":null}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="9954476b-4f02-4182-acc3-b53be74842f6"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId>(<Undefined1></Undefined1>|<Undefined1/>)(<Undefined2></Undefined2>|<Undefined2/>)(<Undefined3></Undefined3>|<Undefined3/>)(<Undefined4></Undefined4>|<Undefined4/>)</item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1b568982-9677-4100-995b-5bbfb23b414c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_elements Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="6af99198-d241-4b0c-a065-227cb3440823"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"   ",
		"Undefined2":"   ",
		"Undefined3":"   ",
		"Undefined4":"   "
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="ee797e1e-c9f3-4295-bd6f-ed4ea0b62f94" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"   ","Undefined2":"   ","Undefined3":"   ","Undefined4":"   "}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="41a9f4d3-d9c6-4c16-907a-76ddf67d0d2a"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>   </Undefined1><Undefined2>   </Undefined2><Undefined3>   </Undefined3><Undefined4>   </Undefined4></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1008ba80-dc16-46ce-b795-7f2beeea624b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_elements Complex TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="687230ef-c583-4ae1-a623-0c5a07a81209"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"   ",
		"Undefined2":"Undefined2",
		"Undefined3":null,
		"Undefined4":"Undefined4",
		"Undefined5":null
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="11268f92-8960-4123-868f-fc54864f377a" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"   ","Undefined2":"Undefined2","Undefined3":null,"Undefined4":"Undefined4","Undefined5":null}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="40dd8780-9753-48fe-9b51-c7c0d399e042"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>   </Undefined1><Undefined2>Undefined2</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined4</Undefined4>(<Undefined5></Undefined5>|<Undefined5/>)</item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5b119ea2-71c3-46ae-8774-6b7d73379672" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item notNull TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="cb9b6748-4ddf-4146-a737-a7f49aab0004"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":"Undefined1",
			"Undefined2":"Undefined2",
			"Undefined3":"Undefined3",
			"Undefined4":"Undefined4"
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="c6db017c-7f12-4f8b-aa5b-e6b8c527083f" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":{"Undefined1":"Undefined1","Undefined2":"Undefined2","Undefined3":"Undefined3","Undefined4":"Undefined4"}}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="6a787dde-35a8-41dc-b591-1911f66d027a"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item><Undefined1>Undefined1</Undefined1><Undefined2>Undefined2</Undefined2><Undefined3>Undefined3</Undefined3><Undefined4>Undefined4</Undefined4></Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1f895e29-dd7f-48d0-85fa-8c3a4472ac0e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item Null TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="29f7022e-005c-4fa2-bab4-f135593205ef"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":null,
			"Undefined2":null,
			"Undefined3":null,
			"Undefined4":null
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="fb0806d4-397e-4aa6-9f07-e50f9189908e" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":{"Undefined1":null,"Undefined2":null,"Undefined3":null,"Undefined4":null}}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="9e17ff9f-ef71-4560-b6f1-17f54bdb5c11"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item>(<Undefined1></Undefined1>|<Undefined1/>)(<Undefined2></Undefined2>|<Undefined2/>)(<Undefined3></Undefined3>|<Undefined3/>)(<Undefined4></Undefined4>|<Undefined4/>)</Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="837f4501-510b-48d7-90cb-b2d5b48d20ef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item Space TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="4a3f82c3-cee6-49c4-85d7-3e6e85d602d8"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":"  ",
			"Undefined2":"  ",
			"Undefined3":"  ",
			"Undefined4":"  "
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="a2a70298-e8da-42de-bdd0-7f271b6c3760" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":{"Undefined1":"  ","Undefined2":"  ","Undefined3":"  ","Undefined4":"  "}}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="caa96c1a-1ccb-429f-bc5d-4da55855cca2"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item><Undefined1>  </Undefined1><Undefined2>  </Undefined2><Undefined3>  </Undefined3><Undefined4>  </Undefined4></Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3e534e7e-7a4b-4d7a-aeca-a5a907e3649d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item Complex TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="11563f72-f51f-44e2-a063-2b812d7c907d"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":"  ",
			"Undefined2":"Undefined2",
			"Undefined3":null,
			"Undefined4":"Undefined4",
			"Undefined5":null
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="abfcdae4-6a59-4d5e-b216-015043f5a86a" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":{"Undefined1":"  ","Undefined2":"Undefined2","Undefined3":null,"Undefined4":"Undefined4","Undefined5":null}}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="7ba97eb8-588a-441d-a67a-890fa59e2ffb"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item><Undefined1>  </Undefined1><Undefined2>Undefined2</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined4</Undefined4>(<Undefined5></Undefined5>|<Undefined5/>)</Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="40dc3f91-7522-4e5d-aaeb-ccf2d160d63b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="JsonItem Undefined_item Loop TestCase" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - Json Item Sequence Request" id="1901bf19-5252-47ab-81f8-dc27933533cb"><con:settings/><con:config service="Json Item Sequence" resourcePath="/mediate/qa/run/activity/Reply/json_item_sequence/message" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Json Item Sequence Request" id="e8c142f7-8109-4eab-8aef-d6d12467097a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${mwHubAddress}:${mwHubPort}</con:endpoint><con:request>{
	"Mandatory":"Mandatory",
	"Optional":"Optional",
	"Multiple":"Multiple",
	"Number":3.14,
	"item" : [{
		"pkId":"pk1107",
		"Undefined1":"Undefined1",
		"Undefined_item" : [{
			"Undefined1":"Undefined1",
			"Undefined2":"Undefined2",
			"Undefined3":null,
			"Undefined4":"Undefined4"
		},{
			"Undefined1":"Undefined11",
			"Undefined2":"Undefined21",
			"Undefined3":null,
			"Undefined4":"Undefined41"
		},{
			"Undefined1":"Undefined12",
			"Undefined2":"Undefined22",
			"Undefined3":null,
			"Undefined4":"Undefined42"
		}]
	}]
}</con:request><con:originalUri>http://192.168.0.130/mediate/qa/run/activity/Reply/json_item_sequence/message</con:originalUri><con:assertion type="JsonPath Match" id="aa5bfdaa-c045-44d1-bd89-431484cc9e39" name="JsonPath Match"><con:configuration><path>$</path><content>{"Mandatory":"Mandatory","Optional":"Optional","Multiple":["Multiple"],"Number":3.14,"item":[{"pkId":"pk1107","Undefined1":"Undefined1","Undefined_item":[{"Undefined1":"Undefined1","Undefined2":"Undefined2","Undefined3":null,"Undefined4":"Undefined4"},{"Undefined1":"Undefined11","Undefined2":"Undefined21","Undefined3":null,"Undefined4":"Undefined41"},{"Undefined1":"Undefined12","Undefined2":"Undefined22","Undefined3":null,"Undefined4":"Undefined42"}]}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="mockresponse" name="mock Receive" id="e5212c9a-f8c1-4971-85d8-208eda59ae1a"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="POST - Json Item Sequence Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SoapMockService</con:interface><con:operation>mock Receive</con:operation><con:path>/mediate/qa/run/mockService/Rec_Rep</con:path><con:port>55000</con:port><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings/><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope>
</con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:assertion type="Simple Contains" id="347b828c-89bc-4f7d-b67a-74fba957c6db"><con:configuration><token><![CDATA[.*<env:Body><.*message.*><Mandatory>Mandatory</Mandatory><Optional>Optional</Optional><Multiple>Multiple</Multiple><Number>3.14</Number><item><pkId>pk1107</pkId><Undefined1>Undefined1</Undefined1><Undefined_item><Undefined1>Undefined1</Undefined1><Undefined2>Undefined2</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined4</Undefined4></Undefined_item><Undefined_item><Undefined1>Undefined11</Undefined1><Undefined2>Undefined21</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined41</Undefined4></Undefined_item><Undefined_item><Undefined1>Undefined12</Undefined1><Undefined2>Undefined22</Undefined2>(<Undefined3></Undefined3>|<Undefined3/>)<Undefined4>Undefined42</Undefined4></Undefined_item></item></.*:message></env:Body>.*]]></token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:mockService port="55000" path="/mediate/qa/run/mockService/Rec_Rep" host="192.168.0.130" name="SoapMockService" bindToHostOnly="false" docroot="" id="7564f1a3-bc50-464d-9eb4-78040c13b36c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:mockOperation name="mock Receive" id="62353805-c8ab-4588-89e5-17dda2c1a3f5" interface="SoapMockService" operation="mock Receive"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="7603b109-7245-4300-9c37-2740511684b2" httpResponseStatus="200" encoding="UTF-8" outgoingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockResponse@disable-multipart-attachments">true</con:setting></con:settings><con:script>def xml = new XmlParser(false, false).parseText(mockRequest.requestContent)
def entry = xml.'**'.find{it.name().contains('Body')}.'*'.find{it.name() != null}
def sw = new StringWriter()
new XmlNodePrinter(new PrintWriter(sw)).print(entry)

def xmlString = com.eviware.soapui.support.xml.XmlUtils.prettyPrintXml(sw.toString())

requestContext.responseMessage = xmlString</con:script><con:responseContent>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Header/>
   &lt;soap:Body>
      	${responseMessage}
   &lt;/soap:Body>
&lt;/soap:Envelope></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:megaware:/mediate/qa/run/mockService/Rec_Rep/Rec_Rep.wsdl/Rec_RepPortType/mock ReceiveOutput"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>